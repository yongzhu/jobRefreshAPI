{
    "swagger": "2.0",
    "info": {
        "description": "As we expose more self serve features to end clients, we need to track when and what customers made changes and provide that insight to both end clients and internal support team. Today our individual CB products track customer behavior separately, most of time not completely. We also store related data in separate locations which made it difficult to have a complete view of what changes customers have made. With the launch of this micro service and associated API, we will give CB product families a centralized location to submit configuration changes made by end clients.",
        "version": "1.0.0",
        "title": "Micro Service: Client Config Log "
    },
    "host": "api.careerbuilder.com",
    "basePath": "/corporate/AdminTools",
    "schemes": [
        "https"
    ],
    "paths": {
        "/ClientConfigLogs": {
            "post": {
                "tags": [
                    "Create Client Config Log Data"
                ],
                "summary": " track config data change and related details",
                "description": "",
                "operationId": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [                                            
                    {
                        "in": "body",
                        "name": "body",
                        "description": "create log data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConfigLogRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",                        
                        "schema": {
                            "$ref": "#/definitions/APICreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/APIResponseErrors"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/APIResponseUnAuthErrors"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "ConfigLogRequest": {
            "type": "object",
            "required": [
                "account_id",
                "customer_facing_text", 
                "action_type"
            ],
            "properties": {
                "account_id": {
                    "type": "string",
                    "example": "AOB56H5W7PHCPN3PB16"
                },
                "customer_facing_text": {
                    "type": "string",
                    "example": "User Name for Bullhorn changed from UserNameA to UserNameB"
                },
                "action_type": {
                    "type": "string",
                    "enum": ["data_change", "login", "logout", "file_change", "product_change"],
                    "example": "data_change"
                },
                "end_client_entity_id": {
                    "type": "string",
                    "example": "demoUserEmail@test.com"
                },
                "product_instance_id": {
                    "type": "string",
                    "example": "cd9f8866-3be3-11e7-b6c8-12cdb5598af4"
                },                
                "field_name_changed": {
                    "type": "string",
                    "example": "Bullhorn.UserName"
                },                
                "old_value": {
                    "type": "string",
                    "example": "UserNameA"
                },
                "new_value": {
                    "type": "string",
                    "example": "UserNameB"
                },
                "system_entity_id": {
                    "type": "string",
                    "example": "J3G14F62ZDMT4RYF6VH"
                },
                "access_type": {
                    "type": "string",
                    "example": "member search"
                },               
                "trust_boundary_client_ip": {
                    "type": "string",
                    "example": "203.116.5.14"
                },
                "context_boundary_network_ip": {
                    "type": "string",
                    "example": "74.125.68.103"
                },
                "request_id": {
                    "type": "string",
                    "example": "request_id_Demo"
                },
                "create_date_time": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "APIResponseError": {
            "type": "object",
            "properties": {               
                "type": {
                    "type": "string",
                    "example": "input_missing",
                    "enum": ["input_missing", "invalid_option", "unknown_error"]
                },
                "message":{
                    "type": "string",
                    "enum": ["account_id is required", "customer_facing_text is required", "action_type is required", "action_type is invalid", "unknown error"],
                    "example": "account_id is required"
                },
                "code":{
                    "type": "string",
                    "example": "20201",
                    "enum": ["20201", "20202", "20203", "20204", "50201"]
                }
            }
        }, 
        "APIResponseUnAuthError": {
            "type": "object",
            "properties": {               
                "type": {
                    "type": "string",
                    "example": "UnauthorizedSourceError",
                    "enum": ["UnauthorizedSourceError", "NoValidAuthorizationHeaderError", "UserNotFoundError", "AccountNotFoundError"]
                },
                "message":{
                    "type": "string",
                    "enum": ["The request is made from a unauthorized source", "No valid authorization header found in the request", "This is a user-centric API but no user is found in the request", "User is not under a Careerbuilder Account"],
                    "example": "The request is made from a unauthorized source"
                }
            }
        },        
        "APICreateResponse": {
            "type": "object",
            "properties": {               
                "data": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "string",
                            "example": "success"
                        }
                    }
                }                  
            }
        },
        "APIResponseErrors": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/APIResponseError"
                    }
                }
            }
        } ,
        "APIResponseUnAuthErrors": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/APIResponseUnAuthError"
                    }
                }
            }
        }       
    }
}